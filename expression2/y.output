Terminals unused in grammar

   WHILE
   IF
   IFX
   ELSE


State 10 conflicts: 1 shift/reduce
State 13 conflicts: 1 shift/reduce
State 29 conflicts: 1 shift/reduce


Grammar

    0 $accept: input $end

    1 input: input stmt
    2      | %empty

    3 stmt: expr
    4     | PRINT expr
    5     | VARIABLE '=' expr

    6 expr: INTEGER
    7     | VARIABLE
    8     | '-' expr
    9     | '!' expr
   10     | expr '+' expr
   11     | expr '-' expr
   12     | expr '*' expr
   13     | expr '/' expr
   14     | expr '<' expr
   15     | expr '>' expr
   16     | expr AND expr
   17     | expr OR expr
   18     | expr GE expr
   19     | expr LE expr
   20     | expr NE expr
   21     | expr EQ expr
   22     | '(' expr ')'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 9
'(' (40) 22
')' (41) 22
'*' (42) 12
'+' (43) 10
'-' (45) 8 11
'/' (47) 13
'<' (60) 14
'=' (61) 5
'>' (62) 15
error (256)
INTEGER (258) 6
VARIABLE (259) 5 7
WHILE (260)
IF (261)
PRINT (262) 4
IFX (263)
ELSE (264)
OR (265) 17
AND (266) 16
GE (267) 18
LE (268) 19
EQ (269) 21
NE (270) 20
UMINUS (271)


Nonterminals, with rules where they appear

$accept (27)
    on left: 0
input (28)
    on left: 1 2, on right: 0 1
stmt (29)
    on left: 3 4 5, on right: 1
expr (30)
    on left: 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22, on right:
    3 4 5 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22


State 0

    0 $accept: . input $end

    $default  reduce using rule 2 (input)

    input  go to state 1


State 1

    0 $accept: input . $end
    1 input: input . stmt

    $end      shift, and go to state 2
    INTEGER   shift, and go to state 3
    VARIABLE  shift, and go to state 4
    PRINT     shift, and go to state 5
    '-'       shift, and go to state 6
    '!'       shift, and go to state 7
    '('       shift, and go to state 8

    stmt  go to state 9
    expr  go to state 10


State 2

    0 $accept: input $end .

    $default  accept


State 3

    6 expr: INTEGER .

    $default  reduce using rule 6 (expr)


State 4

    5 stmt: VARIABLE . '=' expr
    7 expr: VARIABLE .

    '='  shift, and go to state 11

    $default  reduce using rule 7 (expr)


State 5

    4 stmt: PRINT . expr

    INTEGER   shift, and go to state 3
    VARIABLE  shift, and go to state 12
    '-'       shift, and go to state 6
    '!'       shift, and go to state 7
    '('       shift, and go to state 8

    expr  go to state 13


State 6

    8 expr: '-' . expr

    INTEGER   shift, and go to state 3
    VARIABLE  shift, and go to state 12
    '-'       shift, and go to state 6
    '!'       shift, and go to state 7
    '('       shift, and go to state 8

    expr  go to state 14


State 7

    9 expr: '!' . expr

    INTEGER   shift, and go to state 3
    VARIABLE  shift, and go to state 12
    '-'       shift, and go to state 6
    '!'       shift, and go to state 7
    '('       shift, and go to state 8

    expr  go to state 15


State 8

   22 expr: '(' . expr ')'

    INTEGER   shift, and go to state 3
    VARIABLE  shift, and go to state 12
    '-'       shift, and go to state 6
    '!'       shift, and go to state 7
    '('       shift, and go to state 8

    expr  go to state 16


State 9

    1 input: input stmt .

    $default  reduce using rule 1 (input)


State 10

    3 stmt: expr .
   10 expr: expr . '+' expr
   11     | expr . '-' expr
   12     | expr . '*' expr
   13     | expr . '/' expr
   14     | expr . '<' expr
   15     | expr . '>' expr
   16     | expr . AND expr
   17     | expr . OR expr
   18     | expr . GE expr
   19     | expr . LE expr
   20     | expr . NE expr
   21     | expr . EQ expr

    OR   shift, and go to state 17
    AND  shift, and go to state 18
    GE   shift, and go to state 19
    LE   shift, and go to state 20
    EQ   shift, and go to state 21
    NE   shift, and go to state 22
    '>'  shift, and go to state 23
    '<'  shift, and go to state 24
    '+'  shift, and go to state 25
    '-'  shift, and go to state 26
    '*'  shift, and go to state 27
    '/'  shift, and go to state 28

    '-'       [reduce using rule 3 (stmt)]
    $default  reduce using rule 3 (stmt)


State 11

    5 stmt: VARIABLE '=' . expr

    INTEGER   shift, and go to state 3
    VARIABLE  shift, and go to state 12
    '-'       shift, and go to state 6
    '!'       shift, and go to state 7
    '('       shift, and go to state 8

    expr  go to state 29


State 12

    7 expr: VARIABLE .

    $default  reduce using rule 7 (expr)


State 13

    4 stmt: PRINT expr .
   10 expr: expr . '+' expr
   11     | expr . '-' expr
   12     | expr . '*' expr
   13     | expr . '/' expr
   14     | expr . '<' expr
   15     | expr . '>' expr
   16     | expr . AND expr
   17     | expr . OR expr
   18     | expr . GE expr
   19     | expr . LE expr
   20     | expr . NE expr
   21     | expr . EQ expr

    OR   shift, and go to state 17
    AND  shift, and go to state 18
    GE   shift, and go to state 19
    LE   shift, and go to state 20
    EQ   shift, and go to state 21
    NE   shift, and go to state 22
    '>'  shift, and go to state 23
    '<'  shift, and go to state 24
    '+'  shift, and go to state 25
    '-'  shift, and go to state 26
    '*'  shift, and go to state 27
    '/'  shift, and go to state 28

    '-'       [reduce using rule 4 (stmt)]
    $default  reduce using rule 4 (stmt)


State 14

    8 expr: '-' expr .
   10     | expr . '+' expr
   11     | expr . '-' expr
   12     | expr . '*' expr
   13     | expr . '/' expr
   14     | expr . '<' expr
   15     | expr . '>' expr
   16     | expr . AND expr
   17     | expr . OR expr
   18     | expr . GE expr
   19     | expr . LE expr
   20     | expr . NE expr
   21     | expr . EQ expr

    $default  reduce using rule 8 (expr)


State 15

    9 expr: '!' expr .
   10     | expr . '+' expr
   11     | expr . '-' expr
   12     | expr . '*' expr
   13     | expr . '/' expr
   14     | expr . '<' expr
   15     | expr . '>' expr
   16     | expr . AND expr
   17     | expr . OR expr
   18     | expr . GE expr
   19     | expr . LE expr
   20     | expr . NE expr
   21     | expr . EQ expr

    $default  reduce using rule 9 (expr)


State 16

   10 expr: expr . '+' expr
   11     | expr . '-' expr
   12     | expr . '*' expr
   13     | expr . '/' expr
   14     | expr . '<' expr
   15     | expr . '>' expr
   16     | expr . AND expr
   17     | expr . OR expr
   18     | expr . GE expr
   19     | expr . LE expr
   20     | expr . NE expr
   21     | expr . EQ expr
   22     | '(' expr . ')'

    OR   shift, and go to state 17
    AND  shift, and go to state 18
    GE   shift, and go to state 19
    LE   shift, and go to state 20
    EQ   shift, and go to state 21
    NE   shift, and go to state 22
    '>'  shift, and go to state 23
    '<'  shift, and go to state 24
    '+'  shift, and go to state 25
    '-'  shift, and go to state 26
    '*'  shift, and go to state 27
    '/'  shift, and go to state 28
    ')'  shift, and go to state 30


State 17

   17 expr: expr OR . expr

    INTEGER   shift, and go to state 3
    VARIABLE  shift, and go to state 12
    '-'       shift, and go to state 6
    '!'       shift, and go to state 7
    '('       shift, and go to state 8

    expr  go to state 31


State 18

   16 expr: expr AND . expr

    INTEGER   shift, and go to state 3
    VARIABLE  shift, and go to state 12
    '-'       shift, and go to state 6
    '!'       shift, and go to state 7
    '('       shift, and go to state 8

    expr  go to state 32


State 19

   18 expr: expr GE . expr

    INTEGER   shift, and go to state 3
    VARIABLE  shift, and go to state 12
    '-'       shift, and go to state 6
    '!'       shift, and go to state 7
    '('       shift, and go to state 8

    expr  go to state 33


State 20

   19 expr: expr LE . expr

    INTEGER   shift, and go to state 3
    VARIABLE  shift, and go to state 12
    '-'       shift, and go to state 6
    '!'       shift, and go to state 7
    '('       shift, and go to state 8

    expr  go to state 34


State 21

   21 expr: expr EQ . expr

    INTEGER   shift, and go to state 3
    VARIABLE  shift, and go to state 12
    '-'       shift, and go to state 6
    '!'       shift, and go to state 7
    '('       shift, and go to state 8

    expr  go to state 35


State 22

   20 expr: expr NE . expr

    INTEGER   shift, and go to state 3
    VARIABLE  shift, and go to state 12
    '-'       shift, and go to state 6
    '!'       shift, and go to state 7
    '('       shift, and go to state 8

    expr  go to state 36


State 23

   15 expr: expr '>' . expr

    INTEGER   shift, and go to state 3
    VARIABLE  shift, and go to state 12
    '-'       shift, and go to state 6
    '!'       shift, and go to state 7
    '('       shift, and go to state 8

    expr  go to state 37


State 24

   14 expr: expr '<' . expr

    INTEGER   shift, and go to state 3
    VARIABLE  shift, and go to state 12
    '-'       shift, and go to state 6
    '!'       shift, and go to state 7
    '('       shift, and go to state 8

    expr  go to state 38


State 25

   10 expr: expr '+' . expr

    INTEGER   shift, and go to state 3
    VARIABLE  shift, and go to state 12
    '-'       shift, and go to state 6
    '!'       shift, and go to state 7
    '('       shift, and go to state 8

    expr  go to state 39


State 26

   11 expr: expr '-' . expr

    INTEGER   shift, and go to state 3
    VARIABLE  shift, and go to state 12
    '-'       shift, and go to state 6
    '!'       shift, and go to state 7
    '('       shift, and go to state 8

    expr  go to state 40


State 27

   12 expr: expr '*' . expr

    INTEGER   shift, and go to state 3
    VARIABLE  shift, and go to state 12
    '-'       shift, and go to state 6
    '!'       shift, and go to state 7
    '('       shift, and go to state 8

    expr  go to state 41


State 28

   13 expr: expr '/' . expr

    INTEGER   shift, and go to state 3
    VARIABLE  shift, and go to state 12
    '-'       shift, and go to state 6
    '!'       shift, and go to state 7
    '('       shift, and go to state 8

    expr  go to state 42


State 29

    5 stmt: VARIABLE '=' expr .
   10 expr: expr . '+' expr
   11     | expr . '-' expr
   12     | expr . '*' expr
   13     | expr . '/' expr
   14     | expr . '<' expr
   15     | expr . '>' expr
   16     | expr . AND expr
   17     | expr . OR expr
   18     | expr . GE expr
   19     | expr . LE expr
   20     | expr . NE expr
   21     | expr . EQ expr

    OR   shift, and go to state 17
    AND  shift, and go to state 18
    GE   shift, and go to state 19
    LE   shift, and go to state 20
    EQ   shift, and go to state 21
    NE   shift, and go to state 22
    '>'  shift, and go to state 23
    '<'  shift, and go to state 24
    '+'  shift, and go to state 25
    '-'  shift, and go to state 26
    '*'  shift, and go to state 27
    '/'  shift, and go to state 28

    '-'       [reduce using rule 5 (stmt)]
    $default  reduce using rule 5 (stmt)


State 30

   22 expr: '(' expr ')' .

    $default  reduce using rule 22 (expr)


State 31

   10 expr: expr . '+' expr
   11     | expr . '-' expr
   12     | expr . '*' expr
   13     | expr . '/' expr
   14     | expr . '<' expr
   15     | expr . '>' expr
   16     | expr . AND expr
   17     | expr . OR expr
   17     | expr OR expr .
   18     | expr . GE expr
   19     | expr . LE expr
   20     | expr . NE expr
   21     | expr . EQ expr

    GE   shift, and go to state 19
    LE   shift, and go to state 20
    EQ   shift, and go to state 21
    NE   shift, and go to state 22
    '>'  shift, and go to state 23
    '<'  shift, and go to state 24
    '+'  shift, and go to state 25
    '-'  shift, and go to state 26
    '*'  shift, and go to state 27
    '/'  shift, and go to state 28

    $default  reduce using rule 17 (expr)


State 32

   10 expr: expr . '+' expr
   11     | expr . '-' expr
   12     | expr . '*' expr
   13     | expr . '/' expr
   14     | expr . '<' expr
   15     | expr . '>' expr
   16     | expr . AND expr
   16     | expr AND expr .
   17     | expr . OR expr
   18     | expr . GE expr
   19     | expr . LE expr
   20     | expr . NE expr
   21     | expr . EQ expr

    GE   shift, and go to state 19
    LE   shift, and go to state 20
    EQ   shift, and go to state 21
    NE   shift, and go to state 22
    '>'  shift, and go to state 23
    '<'  shift, and go to state 24
    '+'  shift, and go to state 25
    '-'  shift, and go to state 26
    '*'  shift, and go to state 27
    '/'  shift, and go to state 28

    $default  reduce using rule 16 (expr)


State 33

   10 expr: expr . '+' expr
   11     | expr . '-' expr
   12     | expr . '*' expr
   13     | expr . '/' expr
   14     | expr . '<' expr
   15     | expr . '>' expr
   16     | expr . AND expr
   17     | expr . OR expr
   18     | expr . GE expr
   18     | expr GE expr .
   19     | expr . LE expr
   20     | expr . NE expr
   21     | expr . EQ expr

    '+'  shift, and go to state 25
    '-'  shift, and go to state 26
    '*'  shift, and go to state 27
    '/'  shift, and go to state 28

    $default  reduce using rule 18 (expr)


State 34

   10 expr: expr . '+' expr
   11     | expr . '-' expr
   12     | expr . '*' expr
   13     | expr . '/' expr
   14     | expr . '<' expr
   15     | expr . '>' expr
   16     | expr . AND expr
   17     | expr . OR expr
   18     | expr . GE expr
   19     | expr . LE expr
   19     | expr LE expr .
   20     | expr . NE expr
   21     | expr . EQ expr

    '+'  shift, and go to state 25
    '-'  shift, and go to state 26
    '*'  shift, and go to state 27
    '/'  shift, and go to state 28

    $default  reduce using rule 19 (expr)


State 35

   10 expr: expr . '+' expr
   11     | expr . '-' expr
   12     | expr . '*' expr
   13     | expr . '/' expr
   14     | expr . '<' expr
   15     | expr . '>' expr
   16     | expr . AND expr
   17     | expr . OR expr
   18     | expr . GE expr
   19     | expr . LE expr
   20     | expr . NE expr
   21     | expr . EQ expr
   21     | expr EQ expr .

    '+'  shift, and go to state 25
    '-'  shift, and go to state 26
    '*'  shift, and go to state 27
    '/'  shift, and go to state 28

    $default  reduce using rule 21 (expr)


State 36

   10 expr: expr . '+' expr
   11     | expr . '-' expr
   12     | expr . '*' expr
   13     | expr . '/' expr
   14     | expr . '<' expr
   15     | expr . '>' expr
   16     | expr . AND expr
   17     | expr . OR expr
   18     | expr . GE expr
   19     | expr . LE expr
   20     | expr . NE expr
   20     | expr NE expr .
   21     | expr . EQ expr

    '+'  shift, and go to state 25
    '-'  shift, and go to state 26
    '*'  shift, and go to state 27
    '/'  shift, and go to state 28

    $default  reduce using rule 20 (expr)


State 37

   10 expr: expr . '+' expr
   11     | expr . '-' expr
   12     | expr . '*' expr
   13     | expr . '/' expr
   14     | expr . '<' expr
   15     | expr . '>' expr
   15     | expr '>' expr .
   16     | expr . AND expr
   17     | expr . OR expr
   18     | expr . GE expr
   19     | expr . LE expr
   20     | expr . NE expr
   21     | expr . EQ expr

    '+'  shift, and go to state 25
    '-'  shift, and go to state 26
    '*'  shift, and go to state 27
    '/'  shift, and go to state 28

    $default  reduce using rule 15 (expr)


State 38

   10 expr: expr . '+' expr
   11     | expr . '-' expr
   12     | expr . '*' expr
   13     | expr . '/' expr
   14     | expr . '<' expr
   14     | expr '<' expr .
   15     | expr . '>' expr
   16     | expr . AND expr
   17     | expr . OR expr
   18     | expr . GE expr
   19     | expr . LE expr
   20     | expr . NE expr
   21     | expr . EQ expr

    '+'  shift, and go to state 25
    '-'  shift, and go to state 26
    '*'  shift, and go to state 27
    '/'  shift, and go to state 28

    $default  reduce using rule 14 (expr)


State 39

   10 expr: expr . '+' expr
   10     | expr '+' expr .
   11     | expr . '-' expr
   12     | expr . '*' expr
   13     | expr . '/' expr
   14     | expr . '<' expr
   15     | expr . '>' expr
   16     | expr . AND expr
   17     | expr . OR expr
   18     | expr . GE expr
   19     | expr . LE expr
   20     | expr . NE expr
   21     | expr . EQ expr

    '*'  shift, and go to state 27
    '/'  shift, and go to state 28

    $default  reduce using rule 10 (expr)


State 40

   10 expr: expr . '+' expr
   11     | expr . '-' expr
   11     | expr '-' expr .
   12     | expr . '*' expr
   13     | expr . '/' expr
   14     | expr . '<' expr
   15     | expr . '>' expr
   16     | expr . AND expr
   17     | expr . OR expr
   18     | expr . GE expr
   19     | expr . LE expr
   20     | expr . NE expr
   21     | expr . EQ expr

    '*'  shift, and go to state 27
    '/'  shift, and go to state 28

    $default  reduce using rule 11 (expr)


State 41

   10 expr: expr . '+' expr
   11     | expr . '-' expr
   12     | expr . '*' expr
   12     | expr '*' expr .
   13     | expr . '/' expr
   14     | expr . '<' expr
   15     | expr . '>' expr
   16     | expr . AND expr
   17     | expr . OR expr
   18     | expr . GE expr
   19     | expr . LE expr
   20     | expr . NE expr
   21     | expr . EQ expr

    $default  reduce using rule 12 (expr)


State 42

   10 expr: expr . '+' expr
   11     | expr . '-' expr
   12     | expr . '*' expr
   13     | expr . '/' expr
   13     | expr '/' expr .
   14     | expr . '<' expr
   15     | expr . '>' expr
   16     | expr . AND expr
   17     | expr . OR expr
   18     | expr . GE expr
   19     | expr . LE expr
   20     | expr . NE expr
   21     | expr . EQ expr

    $default  reduce using rule 13 (expr)
