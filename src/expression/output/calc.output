Terminals unused in grammar

   WHILE
   IF
   IFX
   ELSE


Grammar

    0 $accept: input $end

    1 input: expr
    2      | PRINT expr
    3      | VARIABLE '=' expr

    4 expr: INTEGER
    5     | VARIABLE
    6     | '-' expr
    7     | '!' expr
    8     | expr '+' expr
    9     | expr '-' expr
   10     | expr '*' expr
   11     | expr '/' expr
   12     | expr '<' expr
   13     | expr '>' expr
   14     | expr AND expr
   15     | expr OR expr
   16     | expr GE expr
   17     | expr LE expr
   18     | expr NE expr
   19     | expr EQ expr
   20     | '(' expr ')'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 7
'(' (40) 20
')' (41) 20
'*' (42) 10
'+' (43) 8
'-' (45) 6 9
'/' (47) 11
'<' (60) 12
'=' (61) 3
'>' (62) 13
error (256)
INTEGER (258) 4
VARIABLE (259) 3 5
WHILE (260)
IF (261)
PRINT (262) 2
IFX (263)
ELSE (264)
OR (265) 15
AND (266) 14
GE (267) 16
LE (268) 17
EQ (269) 19
NE (270) 18
UMINUS (271)


Nonterminals, with rules where they appear

$accept (27)
    on left: 0
input (28)
    on left: 1 2 3, on right: 0
expr (29)
    on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20, on right:
    1 2 3 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20


State 0

    0 $accept: . input $end

    INTEGER   shift, and go to state 1
    VARIABLE  shift, and go to state 2
    PRINT     shift, and go to state 3
    '-'       shift, and go to state 4
    '!'       shift, and go to state 5
    '('       shift, and go to state 6

    input  go to state 7
    expr   go to state 8


State 1

    4 expr: INTEGER .

    $default  reduce using rule 4 (expr)


State 2

    3 input: VARIABLE . '=' expr
    5 expr: VARIABLE .

    '='  shift, and go to state 9

    $default  reduce using rule 5 (expr)


State 3

    2 input: PRINT . expr

    INTEGER   shift, and go to state 1
    VARIABLE  shift, and go to state 10
    '-'       shift, and go to state 4
    '!'       shift, and go to state 5
    '('       shift, and go to state 6

    expr  go to state 11


State 4

    6 expr: '-' . expr

    INTEGER   shift, and go to state 1
    VARIABLE  shift, and go to state 10
    '-'       shift, and go to state 4
    '!'       shift, and go to state 5
    '('       shift, and go to state 6

    expr  go to state 12


State 5

    7 expr: '!' . expr

    INTEGER   shift, and go to state 1
    VARIABLE  shift, and go to state 10
    '-'       shift, and go to state 4
    '!'       shift, and go to state 5
    '('       shift, and go to state 6

    expr  go to state 13


State 6

   20 expr: '(' . expr ')'

    INTEGER   shift, and go to state 1
    VARIABLE  shift, and go to state 10
    '-'       shift, and go to state 4
    '!'       shift, and go to state 5
    '('       shift, and go to state 6

    expr  go to state 14


State 7

    0 $accept: input . $end

    $end  shift, and go to state 15


State 8

    1 input: expr .
    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   12     | expr . '<' expr
   13     | expr . '>' expr
   14     | expr . AND expr
   15     | expr . OR expr
   16     | expr . GE expr
   17     | expr . LE expr
   18     | expr . NE expr
   19     | expr . EQ expr

    OR   shift, and go to state 16
    AND  shift, and go to state 17
    GE   shift, and go to state 18
    LE   shift, and go to state 19
    EQ   shift, and go to state 20
    NE   shift, and go to state 21
    '>'  shift, and go to state 22
    '<'  shift, and go to state 23
    '+'  shift, and go to state 24
    '-'  shift, and go to state 25
    '*'  shift, and go to state 26
    '/'  shift, and go to state 27

    $default  reduce using rule 1 (input)


State 9

    3 input: VARIABLE '=' . expr

    INTEGER   shift, and go to state 1
    VARIABLE  shift, and go to state 10
    '-'       shift, and go to state 4
    '!'       shift, and go to state 5
    '('       shift, and go to state 6

    expr  go to state 28


State 10

    5 expr: VARIABLE .

    $default  reduce using rule 5 (expr)


State 11

    2 input: PRINT expr .
    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   12     | expr . '<' expr
   13     | expr . '>' expr
   14     | expr . AND expr
   15     | expr . OR expr
   16     | expr . GE expr
   17     | expr . LE expr
   18     | expr . NE expr
   19     | expr . EQ expr

    OR   shift, and go to state 16
    AND  shift, and go to state 17
    GE   shift, and go to state 18
    LE   shift, and go to state 19
    EQ   shift, and go to state 20
    NE   shift, and go to state 21
    '>'  shift, and go to state 22
    '<'  shift, and go to state 23
    '+'  shift, and go to state 24
    '-'  shift, and go to state 25
    '*'  shift, and go to state 26
    '/'  shift, and go to state 27

    $default  reduce using rule 2 (input)


State 12

    6 expr: '-' expr .
    8     | expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   12     | expr . '<' expr
   13     | expr . '>' expr
   14     | expr . AND expr
   15     | expr . OR expr
   16     | expr . GE expr
   17     | expr . LE expr
   18     | expr . NE expr
   19     | expr . EQ expr

    $default  reduce using rule 6 (expr)


State 13

    7 expr: '!' expr .
    8     | expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   12     | expr . '<' expr
   13     | expr . '>' expr
   14     | expr . AND expr
   15     | expr . OR expr
   16     | expr . GE expr
   17     | expr . LE expr
   18     | expr . NE expr
   19     | expr . EQ expr

    $default  reduce using rule 7 (expr)


State 14

    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   12     | expr . '<' expr
   13     | expr . '>' expr
   14     | expr . AND expr
   15     | expr . OR expr
   16     | expr . GE expr
   17     | expr . LE expr
   18     | expr . NE expr
   19     | expr . EQ expr
   20     | '(' expr . ')'

    OR   shift, and go to state 16
    AND  shift, and go to state 17
    GE   shift, and go to state 18
    LE   shift, and go to state 19
    EQ   shift, and go to state 20
    NE   shift, and go to state 21
    '>'  shift, and go to state 22
    '<'  shift, and go to state 23
    '+'  shift, and go to state 24
    '-'  shift, and go to state 25
    '*'  shift, and go to state 26
    '/'  shift, and go to state 27
    ')'  shift, and go to state 29


State 15

    0 $accept: input $end .

    $default  accept


State 16

   15 expr: expr OR . expr

    INTEGER   shift, and go to state 1
    VARIABLE  shift, and go to state 10
    '-'       shift, and go to state 4
    '!'       shift, and go to state 5
    '('       shift, and go to state 6

    expr  go to state 30


State 17

   14 expr: expr AND . expr

    INTEGER   shift, and go to state 1
    VARIABLE  shift, and go to state 10
    '-'       shift, and go to state 4
    '!'       shift, and go to state 5
    '('       shift, and go to state 6

    expr  go to state 31


State 18

   16 expr: expr GE . expr

    INTEGER   shift, and go to state 1
    VARIABLE  shift, and go to state 10
    '-'       shift, and go to state 4
    '!'       shift, and go to state 5
    '('       shift, and go to state 6

    expr  go to state 32


State 19

   17 expr: expr LE . expr

    INTEGER   shift, and go to state 1
    VARIABLE  shift, and go to state 10
    '-'       shift, and go to state 4
    '!'       shift, and go to state 5
    '('       shift, and go to state 6

    expr  go to state 33


State 20

   19 expr: expr EQ . expr

    INTEGER   shift, and go to state 1
    VARIABLE  shift, and go to state 10
    '-'       shift, and go to state 4
    '!'       shift, and go to state 5
    '('       shift, and go to state 6

    expr  go to state 34


State 21

   18 expr: expr NE . expr

    INTEGER   shift, and go to state 1
    VARIABLE  shift, and go to state 10
    '-'       shift, and go to state 4
    '!'       shift, and go to state 5
    '('       shift, and go to state 6

    expr  go to state 35


State 22

   13 expr: expr '>' . expr

    INTEGER   shift, and go to state 1
    VARIABLE  shift, and go to state 10
    '-'       shift, and go to state 4
    '!'       shift, and go to state 5
    '('       shift, and go to state 6

    expr  go to state 36


State 23

   12 expr: expr '<' . expr

    INTEGER   shift, and go to state 1
    VARIABLE  shift, and go to state 10
    '-'       shift, and go to state 4
    '!'       shift, and go to state 5
    '('       shift, and go to state 6

    expr  go to state 37


State 24

    8 expr: expr '+' . expr

    INTEGER   shift, and go to state 1
    VARIABLE  shift, and go to state 10
    '-'       shift, and go to state 4
    '!'       shift, and go to state 5
    '('       shift, and go to state 6

    expr  go to state 38


State 25

    9 expr: expr '-' . expr

    INTEGER   shift, and go to state 1
    VARIABLE  shift, and go to state 10
    '-'       shift, and go to state 4
    '!'       shift, and go to state 5
    '('       shift, and go to state 6

    expr  go to state 39


State 26

   10 expr: expr '*' . expr

    INTEGER   shift, and go to state 1
    VARIABLE  shift, and go to state 10
    '-'       shift, and go to state 4
    '!'       shift, and go to state 5
    '('       shift, and go to state 6

    expr  go to state 40


State 27

   11 expr: expr '/' . expr

    INTEGER   shift, and go to state 1
    VARIABLE  shift, and go to state 10
    '-'       shift, and go to state 4
    '!'       shift, and go to state 5
    '('       shift, and go to state 6

    expr  go to state 41


State 28

    3 input: VARIABLE '=' expr .
    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   12     | expr . '<' expr
   13     | expr . '>' expr
   14     | expr . AND expr
   15     | expr . OR expr
   16     | expr . GE expr
   17     | expr . LE expr
   18     | expr . NE expr
   19     | expr . EQ expr

    OR   shift, and go to state 16
    AND  shift, and go to state 17
    GE   shift, and go to state 18
    LE   shift, and go to state 19
    EQ   shift, and go to state 20
    NE   shift, and go to state 21
    '>'  shift, and go to state 22
    '<'  shift, and go to state 23
    '+'  shift, and go to state 24
    '-'  shift, and go to state 25
    '*'  shift, and go to state 26
    '/'  shift, and go to state 27

    $default  reduce using rule 3 (input)


State 29

   20 expr: '(' expr ')' .

    $default  reduce using rule 20 (expr)


State 30

    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   12     | expr . '<' expr
   13     | expr . '>' expr
   14     | expr . AND expr
   15     | expr . OR expr
   15     | expr OR expr .
   16     | expr . GE expr
   17     | expr . LE expr
   18     | expr . NE expr
   19     | expr . EQ expr

    GE   shift, and go to state 18
    LE   shift, and go to state 19
    EQ   shift, and go to state 20
    NE   shift, and go to state 21
    '>'  shift, and go to state 22
    '<'  shift, and go to state 23
    '+'  shift, and go to state 24
    '-'  shift, and go to state 25
    '*'  shift, and go to state 26
    '/'  shift, and go to state 27

    $default  reduce using rule 15 (expr)


State 31

    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   12     | expr . '<' expr
   13     | expr . '>' expr
   14     | expr . AND expr
   14     | expr AND expr .
   15     | expr . OR expr
   16     | expr . GE expr
   17     | expr . LE expr
   18     | expr . NE expr
   19     | expr . EQ expr

    GE   shift, and go to state 18
    LE   shift, and go to state 19
    EQ   shift, and go to state 20
    NE   shift, and go to state 21
    '>'  shift, and go to state 22
    '<'  shift, and go to state 23
    '+'  shift, and go to state 24
    '-'  shift, and go to state 25
    '*'  shift, and go to state 26
    '/'  shift, and go to state 27

    $default  reduce using rule 14 (expr)


State 32

    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   12     | expr . '<' expr
   13     | expr . '>' expr
   14     | expr . AND expr
   15     | expr . OR expr
   16     | expr . GE expr
   16     | expr GE expr .
   17     | expr . LE expr
   18     | expr . NE expr
   19     | expr . EQ expr

    '+'  shift, and go to state 24
    '-'  shift, and go to state 25
    '*'  shift, and go to state 26
    '/'  shift, and go to state 27

    $default  reduce using rule 16 (expr)


State 33

    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   12     | expr . '<' expr
   13     | expr . '>' expr
   14     | expr . AND expr
   15     | expr . OR expr
   16     | expr . GE expr
   17     | expr . LE expr
   17     | expr LE expr .
   18     | expr . NE expr
   19     | expr . EQ expr

    '+'  shift, and go to state 24
    '-'  shift, and go to state 25
    '*'  shift, and go to state 26
    '/'  shift, and go to state 27

    $default  reduce using rule 17 (expr)


State 34

    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   12     | expr . '<' expr
   13     | expr . '>' expr
   14     | expr . AND expr
   15     | expr . OR expr
   16     | expr . GE expr
   17     | expr . LE expr
   18     | expr . NE expr
   19     | expr . EQ expr
   19     | expr EQ expr .

    '+'  shift, and go to state 24
    '-'  shift, and go to state 25
    '*'  shift, and go to state 26
    '/'  shift, and go to state 27

    $default  reduce using rule 19 (expr)


State 35

    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   12     | expr . '<' expr
   13     | expr . '>' expr
   14     | expr . AND expr
   15     | expr . OR expr
   16     | expr . GE expr
   17     | expr . LE expr
   18     | expr . NE expr
   18     | expr NE expr .
   19     | expr . EQ expr

    '+'  shift, and go to state 24
    '-'  shift, and go to state 25
    '*'  shift, and go to state 26
    '/'  shift, and go to state 27

    $default  reduce using rule 18 (expr)


State 36

    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   12     | expr . '<' expr
   13     | expr . '>' expr
   13     | expr '>' expr .
   14     | expr . AND expr
   15     | expr . OR expr
   16     | expr . GE expr
   17     | expr . LE expr
   18     | expr . NE expr
   19     | expr . EQ expr

    '+'  shift, and go to state 24
    '-'  shift, and go to state 25
    '*'  shift, and go to state 26
    '/'  shift, and go to state 27

    $default  reduce using rule 13 (expr)


State 37

    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   12     | expr . '<' expr
   12     | expr '<' expr .
   13     | expr . '>' expr
   14     | expr . AND expr
   15     | expr . OR expr
   16     | expr . GE expr
   17     | expr . LE expr
   18     | expr . NE expr
   19     | expr . EQ expr

    '+'  shift, and go to state 24
    '-'  shift, and go to state 25
    '*'  shift, and go to state 26
    '/'  shift, and go to state 27

    $default  reduce using rule 12 (expr)


State 38

    8 expr: expr . '+' expr
    8     | expr '+' expr .
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   12     | expr . '<' expr
   13     | expr . '>' expr
   14     | expr . AND expr
   15     | expr . OR expr
   16     | expr . GE expr
   17     | expr . LE expr
   18     | expr . NE expr
   19     | expr . EQ expr

    '*'  shift, and go to state 26
    '/'  shift, and go to state 27

    $default  reduce using rule 8 (expr)


State 39

    8 expr: expr . '+' expr
    9     | expr . '-' expr
    9     | expr '-' expr .
   10     | expr . '*' expr
   11     | expr . '/' expr
   12     | expr . '<' expr
   13     | expr . '>' expr
   14     | expr . AND expr
   15     | expr . OR expr
   16     | expr . GE expr
   17     | expr . LE expr
   18     | expr . NE expr
   19     | expr . EQ expr

    '*'  shift, and go to state 26
    '/'  shift, and go to state 27

    $default  reduce using rule 9 (expr)


State 40

    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   10     | expr '*' expr .
   11     | expr . '/' expr
   12     | expr . '<' expr
   13     | expr . '>' expr
   14     | expr . AND expr
   15     | expr . OR expr
   16     | expr . GE expr
   17     | expr . LE expr
   18     | expr . NE expr
   19     | expr . EQ expr

    $default  reduce using rule 10 (expr)


State 41

    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   11     | expr '/' expr .
   12     | expr . '<' expr
   13     | expr . '>' expr
   14     | expr . AND expr
   15     | expr . OR expr
   16     | expr . GE expr
   17     | expr . LE expr
   18     | expr . NE expr
   19     | expr . EQ expr

    $default  reduce using rule 11 (expr)
